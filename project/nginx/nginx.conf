upstream backend {
    server 3.36.51.245:5000; # Spring Boot 서버 주소 (EC2 내부 IP 또는 탄력적 IP)
}

upstream openvidu_server {
    server 3.36.51.245:8081; # Openvidu HTTP 서버 주소
}

server {
    listen 80;
    server_name d204test.p-e.kr; # 연결할 도메인

    location / {
        proxy_pass http://localhost:3000; # React 프론트엔드 컨테이너 포트 (기본 3000)
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/ { # /api/ 로 시작하는 요청은 Spring Boot 서버로 프록시
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /openvidu/ { # /openvidu/ 로 시작하는 요청은 Openvidu 서버로 프록시
        proxy_pass http://openvidu_server;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /openvidu-dashboard/ { # Openvidu Dashboard 프록시 (필요시)
        proxy_pass http://3.36.51.245:4443; # Openvidu Dashboard 주소
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

server { # HTTPS 리스너 (443 포트) - 추가
    listen 443 ssl; # ssl 추가
    server_name d204test.p-e.kr;

    ssl_certificate /etc/letsencrypt/live/d204test.p-e.kr/fullchain.pem; # SSL 인증서 경로 (Volume 마운트 또는 Dockerfile COPY 경로)
    ssl_certificate_key /etc/letsencrypt/live/d204test.p-e.kr/privkey.pem; # SSL 개인키 경로 (Volume 마운트 또는 Dockerfile COPY 경로)

    # ... (HTTP 리스너의 location 설정 복사 - proxy_pass 는 http:// 유지 또는 https:// 로 변경) ...
    location / {
        proxy_pass http://frontend:80; # React 프론트엔드 컨테이너 (HTTP) - HTTP 유지
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/ { # /api/ 로 시작하는 요청은 Spring Boot 서버로 프록시
        proxy_pass http://backend; # Spring Boot 서버 컨테이너 (HTTP) - HTTP 유지
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /openvidu/ { # /openvidu/ 로 시작하는 요청은 Openvidu 서버로 프록시
        proxy_pass http://openvidu_server; # Openvidu 서버 컨테이너 (HTTP) - HTTP 유지
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /openvidu-dashboard/ { # Openvidu Dashboard 프록시 (필요시)
        proxy_pass http://3.36.51.245:4443; # Openvidu Dashboard 주소 (HTTP) - HTTP 유지
        # proxy_pass https://3.36.51.245:4443; # HTTPS 로 변경 시 (Openvidu Dashboard HTTPS 지원 확인 필요)
        proxy_set_header Host $host;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}