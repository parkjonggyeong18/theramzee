version: '3.8'
services:
  mysql:
    image: mysql:latest
    container_name: theramzee-mysql-1
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - theramzee-mysql-data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    restart: unless-stopped
    networks:
      - theramzee-network

  redis:
    command: redis-server --bind 0.0.0.0
    image: redis:latest
    container_name: theramzee-redis-1
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - theramzee-redis-data:/data
    restart: unless-stopped
    networks:
      - theramzee-network

  backend:
    build: ./backend
    image: ${BACKEND_IMAGE}
    container_name: theramzee-backend-1
    env_file:
      - .env
    depends_on:
      - mysql
      - redis
    restart: unless-stopped
    networks:
      - theramzee-network

  frontend:
    build:
      context: ./frontend
      args:
        - REACT_APP_VERSION=${BUILD_NUMBER:-dev}
    image: ${FRONTEND_IMAGE}
    container_name: theramzee-frontend-1
    volumes:
      - frontend-static:/app/build
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - theramzee-network

  nginx:
    build: ./nginx
    image: ${NGINX_IMAGE}
    container_name: theramzee-nginx-1
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - frontend-static:/usr/share/nginx/html
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - theramzee-network

volumes:
  theramzee-mysql-data:
  theramzee-redis-data:
  frontend-static:

networks:
  theramzee-network:
    driver: bridge
