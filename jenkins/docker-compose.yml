version: '3.8'
services:
  mysql:
    image: mysql:latest
    container_name: theramzee-mysql-1 # 컨테이너 이름 명시적으로 지정 (선택 사항, 권장)
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: gradation_db
    ports:
      - "3306:3306"
    volumes:
      - theramzee-mysql-data:/var/lib/mysql # 명명된 볼륨 사용
      - ./mysql/init:/docker-entrypoint-initdb.d # 초기화 스크립트 디렉토리
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    restart: unless-stopped
    networks:
      - theramzee-network # theramzee-network 네트워크에 연결

  redis:
    command: redis-server --bind 0.0.0.0
    image: redis:latest
    container_name: theramzee-redis-1 # 컨테이너 이름 명시적으로 지정 (선택 사항, 권장)
    ports:
      - "6379:6379"
    volumes:
      - theramzee-redis-data:/data # 명명된 볼륨 사용
    restart: unless-stopped
    networks:
      - theramzee-network # theramzee-network 네트워크에 연결

  backend:
    build: ./backend
    image: murhyun2/theramzee-backend:latest # Docker Hub 이미지 사용 (Dockerfile 빌드 대신)
    container_name: theramzee-backend-1 # 컨테이너 이름 명시적으로 지정 (선택 사항, 권장)
    ports:
      - "8080:8080"
    depends_on:
      - mysql
      - redis
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://theramzee-mysql-1:3306/gradation_db # 컨테이너 이름 사용 (더 명확)
      SPRING_REDIS_HOST: theramzee-redis-1 # 컨테이너 이름 사용 (더 명확)
    restart: unless-stopped
    networks:
      - theramzee-network # theramzee-network 네트워크에 연결

  frontend:
    build: ./frontend
    image: murhyun2/theramzee-frontend:latest # Docker Hub 이미지 사용 (Dockerfile 빌드 대신)
    container_name: theramzee-frontend-1 # 컨테이너 이름 명시적으로 지정 (선택 사항, 권장)
    ports:
      - "3000:80"
    volumes:
      - ./build:/usr/share/nginx/html
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - theramzee-network # theramzee-network 네트워크에 연결 (선택 사항, 필요한 경우)

  nginx:
    build: ./nginx
    image: murhyun2/theramzee-nginx:latest # Docker Hub 이미지 사용 (Dockerfile 빌드 대신)
    container_name: theramzee-nginx-1 # 컨테이너 이름 명시적으로 지정 (선택 사항, 권장)
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt
      #- ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - theramzee-network # theramzee-network 네트워크에 연결 (선택 사항, 필요한 경우)

volumes:
  theramzee-mysql-data: # 명명된 볼륨 정의 (MySQL)
  theramzee-redis-data: # 명명된 볼륨 정의 (Redis)

networks:
  theramzee-network: # theramzee-network 네트워크 정의
    driver: bridge