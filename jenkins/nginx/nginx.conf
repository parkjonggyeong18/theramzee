events {
    worker_connections 1024;
}

http {
    upstream backend {
        server theramzee-backend-1:8080;
    }

    upstream frontend {
        server theramzee-frontend-1:80;
    }

    server {
        listen 80;
        server_name ramzee.online;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name ramzee.online;

        # SSL 설정
        ssl_certificate /etc/letsencrypt/live/ramzee.online/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ramzee.online/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # 공통 헤더
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # 프론트엔드 프록시
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 백엔드 API 프록시
        location /api/ {
            proxy_pass http://backend/; # 슬래시 추가로 경로 정규화

            # CORS 헤더
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';

            # OPTIONS 처리
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        # OpenVidu 프록시
        location /openvidu/ {
            proxy_pass https://openvidu-server:8443/; # 내부 주소 사용
            proxy_ssl_verify off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}