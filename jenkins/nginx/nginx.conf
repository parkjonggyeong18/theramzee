user  nginx;
worker_processes  auto;

pid        /var/run/nginx.pid;

events {
    worker_connections  2048;
    use epoll;
    multi_accept on;
}

http {
    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # MIME Types
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging Format
    log_format main '$remote_addr - $remote_user [$time_iso8601] '
                    '"$request" $status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'upstream:$upstream_addr rt:$request_time uct:$upstream_connect_time urt:$upstream_response_time';

    access_log  /var/log/nginx/access.log  main buffer=16k flush=30s;
    error_log   /var/log/nginx/error.log warn;

    # Global Load Balancing
    resolver 127.0.0.11 valid=30s;  # Docker 내부 DNS

    # Upstreams
    upstream backend {
        zone backend 64k;
        least_conn;
        server theramzee-backend:8080 max_fails=3 fail_timeout=30s resolve;
        server theramzee-backend-new:8080 max_fails=3 fail_timeout=30s resolve backup;
    }

    upstream frontend {
        zone frontend 64k;
        least_conn;
        server theramzee-frontend:80 max_fails=3 fail_timeout=30s resolve;
        server theramzee-frontend-new:80 max_fails=3 fail_timeout=30s resolve backup;
    }

    # SSL Optimization
    ssl_session_cache   shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_buffer_size 4k;
    ssl_dhparam /etc/nginx/dhparam.pem;

    # Security Headers
    map $upstream_http_x_frame_options $x_frame_options {
        default "DENY";
        ""      "DENY";
    }

    server {
        listen 80;
        server_name ramzee.online i12b204.p.ssafy.io;
        return 301 https://ramzee.online$request_uri;
    }

    server {
        listen 443 ssl;
        server_name i12b204.p.ssafy.io;

        ssl_certificate /etc/letsencrypt/live/ramzee.online/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ramzee.online/privkey.pem;

        return 301 https://ramzee.online$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name ramzee.online;

        # SSL 설정 강화
        ssl_certificate /etc/letsencrypt/live/ramzee.online/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ramzee.online/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/ramzee.online/chain.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;

        # 보안 헤더 강화
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "camera=(self), microphone=(self), geolocation=(), payment=()" always;


        # CSP 정책 강화
        add_header Content-Security-Policy "
            default-src 'self';
            script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.google-analytics.com https://www.googletagmanager.com https://cdnjs.cloudflare.com;
            style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://cdnjs.cloudflare.com;
            img-src 'self' data: https://ramzee.online blob: https://www.google-analytics.com;
            font-src 'self' https://fonts.gstatic.com https://cdnjs.cloudflare.com;
            connect-src 'self' https://ramzee.online wss://ramzee.online:* https://www.google-analytics.com https://www.googletagmanager.com;
            frame-src 'self' https://ramzee.online;
            media-src 'self' blob: https://ramzee.online data: *;
            object-src 'none';
            base-uri 'none';
            form-action 'self';
            frame-ancestors 'self';
            upgrade-insecure-requests
        " always;
        # media-src 'self' blob: https://ramzee.online data: *;

        # 악성 봇 차단
        if ($http_user_agent ~* "(curl|wget|python|scrapy|scan|WordPress|wordpress|wp|WordPressScanner|java|bot|crawler|spider|MJ12bot|AhrefsBot|SemrushBot|Baiduspider|DotBot|BLEXBot|HTTrack|HeadlessChrome|CensysInspect)") {
            return 444;
        }

        # XDebug 세션 파라미터 차단
        if ($query_string ~* "XDEBUG_SESSION_START=phpstorm") {
            return 444;
        }

        # 숨김 파일 접근 제한 강화
        location ~ /\.(?!well-known).* {
            deny all;
            return 404;
            access_log off;
            log_not_found off;
        }

        # 숨김 파일 및 민감한 경로 접근 제한
        location ~ /\.(git|svn|hg|bzr|csv|txt|xml|md|json|yaml|yml|config|ini|env|bak|old|backup|BitKeeper)$ {
            deny all;
            return 404;
        }

        # 압축 설정
        gzip on;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        # WordPress 공격 패턴 차단
        location ~* (wp-admin|wp-login|setup-config\.php) {
            deny all;
            return 444;
        }

        # PHP 파일 접근 차단
        location ~* \.php$ {
            deny all;
            return 444;
        }

        # robots.txt, sitemap.xml 처리
        location = /robots.txt {
            add_header Content-Type text/plain;
            add_header X-Content-Type-Options "nosniff" always;
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
            return 200 "User-agent: *\nDisallow: /api/\nDisallow: /admin/\nSitemap: https://ramzee.online/sitemap.xml";
        }

        location = /sitemap.xml {
            add_header Content-Type application/xml;
            add_header X-Content-Type-Options "nosniff" always;
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
            return 200 '<?xml version="1.0" encoding="UTF-8"?><urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9"></urlset>';
        }

        # manifest.json 처리
        location = /manifest.json {
            add_header Content-Type application/json;
            add_header X-Content-Type-Options "nosniff" always;
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
            proxy_pass http://frontend;
        }

        location ^~ /start/ {  # ^~ 추가 (우선순위 최상)
            root /usr/share/nginx/html;
            expires 1y;
            add_header Cache-Control "public";
            add_header Access-Control-Allow-Origin *;

            # MP4 모듈 활성화
            mp4;
            mp4_buffer_size 1m;
            mp4_max_buffer_size 5m;

            # React 라우팅 방지
            try_files $uri =404;
        }

        # Maintenance Mode Handling
        error_page 503 @maintenance;
        location @maintenance {
            root /usr/share/nginx/html;
            try_files /maintenance.html =503;
        }

        # Health Check Endpoint
        location /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 "OK";
        }

        # Static Assets
        location /static/ {
            alias /usr/share/nginx/html/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        # Media Streaming
        location /media/ {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_buffering on;
            proxy_buffer_size 16k;
            proxy_buffers 64 16k;
        }

        # 이메일 API
        location /api/v1/email/ {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            add_header 'Access-Control-Allow-Origin' '*';
        }

        # 백엔드 API 프록시
        location /api/ {
            limit_req zone=api_limiter burst=20 delay=10;

            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;

            # 캐시 컨트롤 추가
            add_header Cache-Control "no-store, must-revalidate, proxy-revalidate" always;
            add_header Pragma "no-cache" always;

            # CORS 헤더
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Content-Type, Range, Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;

            # OPTIONS 처리
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            # Circuit Breaker
            proxy_next_upstream error timeout http_502 http_503 http_504;
            proxy_next_upstream_tries 2;
            proxy_next_upstream_timeout 1s;

            # Timeouts
            proxy_connect_timeout 3s;
            proxy_send_timeout 10s;
            proxy_read_timeout 30s;
        }

        # WebSocket 프록시
        location /ws/ {
            proxy_pass http://backend/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
            proxy_buffering off;
        }

        # OpenVidu 프록시
        location /openvidu/ {
            proxy_pass https://ramzee.online:8443/;
            proxy_ssl_verify off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # 프론트엔드 프록시
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;

            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            add_header X-Content-Type-Options "nosniff" always;
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
            add_header X-Frame-Options "DENY" always;
            add_header Cache-Control "no-cache, must-revalidate, proxy-revalidate" always;
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
    }

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api_limiter:10m rate=100r/s;
}