/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type  application/octet-stream;

    limit_req_zone $binary_remote_addr zone=bot_limiter:10m rate=10r/s;

    upstream backend {
        server theramzee-backend-1:8080;
    }

    upstream frontend {
        server theramzee-frontend-1:80;
    }

    # 로깅 설정 추가
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    server {
        listen 80;
        server_name ramzee.online i12b204.p.ssafy.io;
        return 301 https://ramzee.online$request_uri;
    }

    server {
        listen 443 ssl;
        server_name i12b204.p.ssafy.io;

        ssl_certificate /etc/letsencrypt/live/ramzee.online/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ramzee.online/privkey.pem;

        return 301 https://ramzee.online$request_uri;
    }

    server {
        listen 443 ssl;
        server_name ramzee.online;

        # SSL 설정
        ssl_certificate /etc/letsencrypt/live/ramzee.online/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ramzee.online/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;

        # 기본 보안 헤더
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;

        # 악성 봇 차단
        if ($http_user_agent ~* "(curl|wget|python|scrapy|scan|WordPress|wordpress|wp|WordPressScanner|java|bot|crawler|spider|MJ12bot|AhrefsBot|SemrushBot|Baiduspider|DotBot|BLEXBot|HTTrack|HeadlessChrome|CensysInspect)") {
            return 444;  # 연결 종료로 변경
        }

        # XDebug 세션 파라미터 차단
        if ($query_string ~* "XDEBUG_SESSION_START=phpstorm") {
            return 444;
        }

        # 숨김 파일 (.env 등) 접근 차단
        location ~ /\.(?!well-known) {
            deny all;
            access_log off;
            log_not_found off;
        }

        # 압축 설정
        gzip on;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        # WordPress 공격 패턴 차단
        location ~* (wp-admin|wp-login|setup-config\.php) {
            deny all;
            return 444;
        }

        # PHP 파일 접근 차단
        location ~* \.php$ {
            deny all;
            return 444;
        }

        # Swagger UI 경로를 백엔드로 프록시 (prefix match)
        location /swagger-ui/ {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 추가: api-docs 경로를 백엔드로 프록시
        location /api-docs/ {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 프론트엔드 프록시
        location / {
            root /usr/share/nginx/html;  # 프론트엔드 빌드 파일 경로
            index index.html;
            try_files $uri $uri/ /index.html;

            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # 디버깅을 위한 추가 헤더
            # add_header X-Debug-Message "Proxying to frontend" always;
        }

        # 정적 파일 캐싱 설정 (선택 사항)
        location /static/ {
            alias /usr/share/nginx/html/static/;
            expires 1y;
            add_header Cache-Control "public";
        }

        location /api/v1/email/ {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            add_header 'Access-Control-Allow-Origin' '*';
        }

        # 백엔드 API 프록시
        location /api/ {

            limit_req zone=bot_limiter burst=20 nodelay;

            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;

            # CORS 헤더 추가
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Content-Type, Range, Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;

            # OPTIONS 처리
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        # OpenVidu 프록시
        location /openvidu/ {
            proxy_pass https://ramzee.online:8443/;
            proxy_ssl_verify off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

        }

        location /ws/ {
            proxy_pass http://backend/ws/;  # 끝에 슬래시(/) 추가
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;

                # 추가 보안 헤더
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                # 연결 유지 시간 설정
                proxy_read_timeout 3600s;
                proxy_send_timeout 3600s;
                proxy_buffering off;
        }
    }
}